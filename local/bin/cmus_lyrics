#!/usr/bin/env bash

DATA=$(cmus-remote -Q 2>/dev/null)
[ -z "$DATA" ] && exit

TITLE=$(echo "$DATA" | grep "^tag title " | cut -d " " -f 3-)
ARTIST=$(echo "$DATA" | grep "^tag artist " | cut -d " " -f 3-)
[[ -z "$ARTIST" || -z "$TITLE" ]] && { notify-send "missing metadata"; exit 1; }

CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/lyrics"

encode() {
	jq -sRr @uri <<< "$@"
}

slug() {
	echo "$@" | iconv -t ascii//TRANSLIT | tr "[:upper:]" "[:lower:]" | sed \
		-e "s/&/and/g" \
		-e "s/[[:space:]:$]\+/-/g" \
		-e "s/[^a-z0-9-]//g"
}

ARTIST_TITLE_SLUG="$(slug "$ARTIST")-$(slug "$TITLE")"
CACHE_FILE="$CACHE_DIR/$ARTIST_TITLE_SLUG"

cache() {
	[ -z "$1" ] && return 1
	[ -d "$CACHE_DIR" ] || mkdir -p "$CACHE_DIR"
	[ -f "$CACHE_FILE" ] && return

	cp "$1" "$CACHE_FILE"
}

get_cached() {
	[ -f "$CACHE_FILE" ] || return 1

	cat "$CACHE_FILE"
}

lyrics_api() {
	URL="https://api.lyrics.ovh/v1/$(encode "$ARTIST")/$(encode "$TITLE")"
	LYRICS=$(curl -sm 3 "$URL" | jq -r '.lyrics // empty')
	[ -z "$LYRICS" ] && return 1

	echo "$LYRICS"
}

dumb() {
	# https://dm.vern.cc
	# https://dumb.lunar.icu
	# https://dumb.privacydev.net
	# https://dumb.ducks.party
	# https://dumb.hyperreal.coffee
	# https://dumb.bloat.cat
	# https://dumb.gitro.xyz
	# https://dumb.jeikobu.net
	INSTANCE="https://dm.vern.cc"
	URL="$INSTANCE/$ARTIST_TITLE_SLUG-lyrics"
	LYRICS=$(curl -sm 10 "$URL" | hxnormalize -x | hxselect 'div#lyrics' | \
		sed 's/<[^>]*>//g' | \
		sed 's/&#39;/'"'"'/g' | \
		sed 's/&#34;/"/g' | \
		sed 's/^[ \t]*//;s/[ \t]*$//'
	)
	[ -z "$LYRICS" ] && return 1

	echo "$LYRICS"
}

LYRICS=$(get_cached || dumb || lyrics_api) || {
	notify-send "lyrics not found"
	exit
}

TEMP=$(mktemp /tmp/lyrics.XXXXX)
trap 'rm -f "$TEMP"' EXIT

echo "$LYRICS" > "$TEMP"
cache "$TEMP"
st -e ${EDITOR:-vim} "$TEMP"
