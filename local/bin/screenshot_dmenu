#!/usr/bin/env bash

functions=("desktop" "area" "window" "monitor" "ocr")

dir="$(xdg-user-dir PICTURES)/Screenshots"
file="$(date +%Y-%m-%d-%H-%M-%S).png"
[ -d "$dir" ] || mkdir -p "$dir"

delay=0
input=$(dmenu -p "delay in seconds (0-60)" <&-) && {
	if [[ "$input" =~ ^[0-9]+$ && "$input" -gt 0 && "$input" -lt 60 ]]; then
		delay=$input
	fi
}

save() {
	tee "$file" | xclip -se c -t image/png
}

capture() {
	sleep $delay
	cd "$dir" && maim -f png "$@" | save
}

desktop() {
	capture -d 0.5 -qu
}

area() {
	capture -d 0.5 -qsouc 0.84,0.37,0.06
}

window() {
	capture -d 0.5 -qui "$(xdotool getactivewindow)"
}

monitor() {
	declare -A monitors
	_monitors=$(
		xrandr --listactivemonitors |
		awk '/+/ {print $4, $3}' |
		awk -F'[x/+* ]' '{print $1,$2"x"$4"+"$6"+"$7}'
	)

	IFS=$'\n'
	declare -A geometries
	for i in $_monitors; do
		monitors[${#monitors[@]}]="${i%% *}"
		geometries[${i%% *}]="${i##* }"
	done
	unset IFS

	target=$(printf "%s\n" "${monitors[@]}" | dmenu -l 4) || exit 1
	for m in "${monitors[@]}"; do
		[ "$m" = "$target" ] && {
			capture -d 0.5 -g ${geometries[${target}]} -qu
			return
		}
	done
	exit
}

ocr() {
	TEMP=$(mktemp /tmp/ocr.XXXXX.png)
	trap 'rm -f "$TEMP"' EXIT
	maim -souc 0.84,0.37,0.06 > "$TEMP" || exit
	tesseract "$TEMP" - -l eng 2>/dev/null | xclip -se c
}

choice=$(printf "%s\n" "${functions[@]}" | dmenu -l 5 2>/dev/null) || exit
for f in "${functions[@]}"; do
	[ "$f" = "$choice" ] && {
		eval "$f"
		notify-send -r 4 -t 2000 "Copied to clipboard"
		exit 0
	}
done
