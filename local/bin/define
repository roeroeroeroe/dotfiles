#!/usr/bin/env bash

USAGE="Usage: ${0##*/} [-c] [--color] <word>
  -c, --color   colorize parts of speech and examples"
COLOR=0

while [ $# -gt 0 ]; do
	case "$1" in
		-c|--color) COLOR=1; shift ;;
		-h|--help) echo "$USAGE"; exit 0 ;;
		*) break ;;
	esac
done

[ -z "$1" ] && {
	echo "$USAGE"
	exit 2
}

res=$(curl -sSL "https://api.dictionaryapi.dev/api/v2/entries/en/$1")

echo "$res" | jq -e 'type == "object" and (.title == "No Definitions Found")' > /dev/null && {
	echo "no definitions found for \"$1\""
	exit 2
}

if [ $COLOR -eq 1 ]; then
	POS=$'\e[1;34m'
	EX=$'\e[1;33m'
	RESET=$'\e[0m'
fi

JQ='
def pos(s):
	($pos_col // "") + s + ($reset // "");

def example(e):
	if e then
		"\n" + ($ex_col // "") + "\t\t\"" + e + "\"" + ($reset // "")
	else
		""
	end;

def syns(a):
	if (a | length) > 0 then
		"\n\t\tsynonyms: " + (a | join(", "))
	else
		""
	end;

def ants(a):
	if (a | length) > 0 then
		"\n\t\tantonyms: " + (a | join(", "))
	else
		""
	end;

def fmtDef:
	"\t" + .definition +
	example(.example) +
	syns(.synonyms) +
	ants(.antonyms);

def fmtPOS:
	pos(.partOfSpeech + ":") + "\n" +
	(
		.definitions
		| to_entries
		| map("\t" + (.key | tostring) + ": " + (.value | fmtDef))
		| join("\n\n")
	);

.[].meanings[] | fmtPOS'

jq -r \
	--arg pos_col "$POS" \
	--arg ex_col "$EX" \
	--arg reset "$RESET" \
	"$JQ" <<< "$res"

if command -v mpv &> /dev/null; then
	audio_url=$(jq -r '[.[].phonetics[].audio] | map(select(length>0))[0] // empty' <<< "$res")
	[ -n "$audio_url" ] && \
		mpv --no-video --really-quiet --volume=100 "$audio_url" &
fi
