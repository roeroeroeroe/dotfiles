#!/usr/bin/env bash

# deps: networkmanager, dnsmasq, nftables, tor, iptables
CONNECTION_NAME="Hotspot"
WLAN_IF="wlan0"
SSID="$(LC_ALL=C tr -dc A-Za-z0-9 < /dev/urandom | head -c 12)"
UUIDS=$(nmcli c show | grep "$CONNECTION_NAME" | awk '{print $2}')
TOR=false
TOR_LOG_FILE="$HOME/tor_hotspot.log"

hotspot_down() {
	[ -z "$UUIDS" ] && {
		echo "No connection with name '$CONNECTION_NAME' found"
		exit 1
	}

	sudo iptables -t nat -C PREROUTING -i "$WLAN_IF" -p udp --dport 53 -j REDIRECT --to-ports 53 && \
		sudo iptables -t nat -D PREROUTING -i "$WLAN_IF" -p udp --dport 53 -j REDIRECT --to-ports 53
	sudo iptables -t nat -C PREROUTING -i "$WLAN_IF" -p tcp --syn -j REDIRECT --to-ports 9040 && \
		sudo iptables -t nat -D PREROUTING -i "$WLAN_IF" -p tcp --syn -j REDIRECT --to-ports 9040
	sudo killall -q tor
	[ -f "$TOR_LOG_FILE" ] && rm "$TOR_LOG_FILE"

	for UUID in $UUIDS; do
		nmcli c delete uuid "$UUID"
	done
}

setup_tor() {
	# WLAN_GATEWAY="10.42.0.1"
	WLAN_GATEWAY="$(ip -4 -o addr show "$WLAN_IF" | cut -d ' ' -f7 | cut -d '/' -f1)"
	sudo setsid tor \
		--VirtualAddrNetwork 10.192.0.0/10 \
		--AutomapHostsOnResolve 1 \
		--TransPort "$WLAN_GATEWAY":9040 \
		--DNSPort "$WLAN_GATEWAY":53 \
		--Log "notice stdout" \
		&> "$TOR_LOG_FILE"
	sudo iptables -t nat -A PREROUTING -i "$WLAN_IF" -p udp --dport 53 -j REDIRECT --to-ports 53
	sudo iptables -t nat -A PREROUTING -i "$WLAN_IF" -p tcp --syn -j REDIRECT --to-ports 9040
}

for arg in "$@"; do
	case $arg in
		-d|--down) hotspot_down; exit ;;
		-t|--tor) TOR=true ;;
	esac
done

nmcli d show "$WLAN_IF" | grep -q "(connected)" && {
	echo "Interface $WLAN_IF is currently busy"
	exit 1
}

[ -n "$UUIDS" ] && {
	echo "Connection '$CONNECTION_NAME' already exists, use option -d to delete it"
	exit 1
}

PASSWORD="$(LC_ALL=C tr -dc A-Za-z0-9 < /dev/urandom | head -c 8)"

nmcli c add \
	type wifi \
	ifname "$WLAN_IF" \
	con-name "$CONNECTION_NAME" \
	ssid "$SSID" \
	autoconnect yes \
	802-11-wireless.mode ap \
	802-11-wireless.band bg \
	ipv4.method shared \
	wifi-sec.key-mgmt wpa-psk \
	wifi-sec.psk "$PASSWORD" \
	802-11-wireless-security.pmf disable

sleep 3
nmcli c up "$CONNECTION_NAME"

[ "$TOR" = true ] && setup_tor

nmcli d wifi show
